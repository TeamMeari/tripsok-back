plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.flywaydb.flyway" version '11.10.1'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
/*
def loadEnvToProjectProps() {
    def envFile = file(".env") // 상위 경로 정확히 맞게 수정
    if (envFile.exists()) {
        def props = new Properties()
        envFile.withInputStream { props.load(it) }
        props.each { key, value ->
            project.ext.set(key.toString(), value.toString())
        }
    }
}

loadEnvToProjectProps()
*/
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.projectlombok:lombok'
    testImplementation 'io.projectreactor:reactor-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    // Flyway
    implementation 'org.flywaydb:flyway-core:11.10.1'
    runtimeOnly 'org.flywaydb:flyway-database-oracle:11.10.1'

    // Database
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11:23.8.0.25.04'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

}

flyway {
    url = project.findProperty("DB_URL")
    user = project.findProperty("DB_USERNAME")
    password = project.findProperty("DB_PASSWORD")
    locations = ['classpath:db/migration']
}

tasks.named('test') {
    useJUnitPlatform()
}
